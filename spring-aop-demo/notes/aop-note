AOP详解：https://blog.csdn.net/q982151756/article/details/80513340

1.AOP要解决的问题
    把横切关注点（指散布于应用中多处的功能）与业务逻辑相分离

    横切关注点可以被模块化为特殊的类，这些类被称为切面（aspect）。
    这样做有两个好处：
        首先，现在每个关注点都集中于一个地方，而不是分散到多处代码中；
        其次，服务模块更简洁，因为它们只包含主要关注点（或核心功能）的代码，而次要关注点的代码被转移到切面中了

2、Spring中基于XML的AOP配置

         1）.把通知bean也交给spring来管理
         2）.使用aop:config 标签表明开始AOP配置
         3）.使用aop：aspect标签表明配置切面
               id属性：是给切面提供的唯一标识
               ref属性：是指定通知bean的ID
         4）.在aop：aspect标签内部使用对应的标签来配置通知的类型
             我们现在的实例是让printlog在切入点方法执行之前执行，所以是迁址通知
             sop:before:表示前置通知
                 method属性：用于指定Logger类中哪个方法是前置的
                 pointcut属性：用于指定切入点表达式，该表达式的含义是指对业务层中哪些方法加强

         切入点表达式写法：

3、通知和切点共同定义了切面的全部内容------它是什么、在何时和何处完成其功能

=====================================
2020-02-08
4.AOP原理之---Spring动态代理机制
    https://blog.csdn.net/zs520ct/article/details/79593196
    动态代理的实现主要涉及两个类：
        1)InvocationHandler
        2)Proxy

    代理模式：
        https://www.cnblogs.com/teach/p/10763845.html
        静态代理：接口、代理类实现接口，处理被代理类的方法，可以在处理被代理类的逻辑中加入其他的业务处理逻辑

        JDK动态代理:
            https://blog.csdn.net/q982151756/article/details/80586894
            此方法中通过反射的方式调用被代理类的方法，可以在方法执行前或后进行别的处理

        Cglib动态代理:
            需要引入第三方类库
            CGLib动态代理是一个第三方实现的动态代理类库，
            不要求被代理类必须实现接口，它采用的是继承被代理类，
            使用其子类的方式，弥补了被代理类没有接口的不足

2020-02-11
5、AOP基于注解的使用方式

    AOP专业术语解读：

    1）通知类型及作用：
        Spring切面可以应用5种类型的通知：
        前置通知（Before）：在目标方法被调用之前调用通知功能；
        后置通知（After）：在目标方法完成之后调用通知，此时不会关心方法的输出是什么；
        返回通知（After-returning）：在目标方法成功执行之后调用通知；
        异常通知（After-throwing）：在目标方法抛出异常后调用通知；
        环绕通知（Around）：通知包裹了被通知的方法，在被通知的方法调用之前和调用之后执行
                            自定义的行为
    2）连接点JoinPoint:
       连接点是在应用执行过程中能够插入切面的一个点。

       切点（Poincut）：如果说通知定义了切面的“什么”和“何时”的话，那么切点就定义了“何处”。

       切面（Aspect）:
            切面是通知和切点的结合。通知和切点共同定义了切面的全部内容——它是什么，在何时和
            何处完成其功能。

       引入（Introduction）:引入允许我们向现有的类添加新方法或属性

       织入（Weaving）:织入是把切面应用到目标对象并创建新的代理对象的过程
                        在目标对象生命周期里有多个点可以进行织入：编译器、类加载器、运行期